#ifndef _PROGRAM_H
#define _PROGRAM_H

#include "mbed.h"

typedef enum ISP_RESULT_CODE{
	ISP_CMD_SUCCESS = 0,
	ISP_INVALID_COMMAND,
	ISP_SRC_ADDR_ERROR,
	ISP_DST_ADDR_ERROR,
	ISP_SRC_ADDR_NOT_MAPPED,
	ISP_DST_ADDR_NOT_MAPPED,
	ISP_COUNT_ERROR,
	ISP_INVALID_SECTOR,
	ISP_SECTOR_NOT_BLANK,
	ISP_SECTOR_NOT_PREPARED_FOR_WRITE_OPERATION,
	ISP_COMPARE_ERROR,
	ISP_BUSY,
	ISP_PARAM_ERROR,
	ISP_ADDR_ERROR,
	ISP_ADDR_NOT_MAPPED,
	ISP_CMD_LOCKED,
	ISP_INVALID_CODE,
	ISP_INVALID_BAUD_RATE,
	ISP_INVALID_STOP_BIT,
	ISP_CODE_READ_PROTECTION_ENABLED
}ISP_RESULT_CODE_T;


typedef enum BAUDRATE_SYNC_STATUS{
	SYNC_STATUS_SETUP_SYNC = 0,
	SYNC_STATUS_RESP_SYNC = 1,
	SYNC_STATUS_SYNC_CONFIRM = 2,
	SYNC_STATUS_SYNC_DONE = 3,
	SYNC_STATUS_SYNC_TIMEOUT = 4,
	SYNC_STATUS_SYNCHRONIZED = 5,
	SYNC_STATUS_SYNCHRONIZED_COMFIRM = 6,
	SYNC_STATUS_SYNC_ERROR = 7,
}BAUDRATE_SYNC_STATUS_T;

typedef enum ISP_CMD{
	ISP_CMD_UNLOCK = 0,
	ISP_CMD_SET_BAUDRATE,
	ISP_CMD_ECHO,
	ISP_CMD_WRITE_TO_RAM,
	ISP_CMD_READ_MEMORY,
	ISP_CMD_PRE_WRITE,
	ISP_CMD_COPY_RAM_TO_FLASH,
	ISP_CMD_GO,
	ISP_CMD_ERASE_SECTOR,
	ISP_CMD_BLANK_CHECK_SECTOR,
	ISP_CMD_READ_PART_ID,
	ISP_CMD_READ_BOOT_CODE_VERSION,
	ISP_CMD_COMPARE,
	ISP_CMD_READ_UID
}ISP_CMD_T;

#define   BAUDRATE_SYNC_SEND_STR          "?"
#define   BAUDRATE_SYNC_RECV_STR          "Synchronized"
#define   OK_STR                          "OK"
#define   ENDCODE_STR                     "\r\n"
#define   SPACE_STR                       ' '

int ISP_syncBaudRate(void);
int ISP_getPartID(char partId[]);

#endif
